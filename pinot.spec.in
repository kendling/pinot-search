# @configure_input@
# We need an explicit dependency on mozilla as the so files don't have a version number 
%define mozilla_ver %(/usr/bin/mozilla-config --version)

Summary: Metasearch tool
Name: @PACKAGE@
Version: @VERSION@
Release: 1
License: GPL
Group: Applications/Internet 
Source: %{name}-%{version}.tar.gz
URL: http://pinot.berlios.de/
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
Requires: xapian-core-libs >= 0.9.4, curl >= 7.13, gtkmm24 >= 2.6, libxml++ >= 2.12, mozilla >= %{mozilla_ver}, sqlite >= 3.1.2, libtextcat >= 2.2, fam >= 2.6.10, gmime >= 2.1, file
BuildRequires: xapian-core-devel >= 0.9.4, curl-devel >= 7.13, gtkmm24-devel >= 2.6, libxml++-devel >= 2.12, mozilla-devel >= %{mozilla_ver}, sqlite-devel >= 3.1.2, libtextcat-devel >= 2.2, fam-devel >= 2.6.10, gmime-devel >= 2.1, file, boost-devel >= 1.32, desktop-file-utils

%description
Pinot is a metasearch tool for the Free Desktop. It enables one to query
sources, display as well as analyze and locally index the returned results.
It may also be used as a lightweight personal space search tool.

%package text-docs 
Summary: Tokenizers for Pinot that handle various text document formats
Group: Applications/Internet
Requires: %{name} = %{version}
Requires: pdftohtml, antiword, unrtf
Obsoletes: pinot-pdf, pinot-word

%description text-docs 
The included tokenizers add support for PDF, MS Word and RTF documents.

%package omega 
Summary: Xapian Omega plugin for Pinot
Group: Applications/Internet
Requires: %{name} = %{version}
Requires: xapian-omega

%description omega
The included plugin enables Pinot to use Xapian Omega as a search engine.

%prep
%setup -q

%build
%configure
make

%install
[ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT
%makeinstall
# This engine is not usable as it is
mv $RPM_BUILD_ROOT/%{_datadir}/pinot/engines/AmazonAPI.src $RPM_BUILD_ROOT/%{_datadir}/pinot/
# Desktop file
cat >%{name}.desktop << EOF
[Desktop Entry]
Name=Pinot Metasearch Tool
Comment=Search the Web and your documents
Exec=%{_bindir}/pinot
StartupNotify=true
Icon=pinot.png
Terminal=false
Type=Application
Categories=Application;Network;
Encoding=UTF-8
EOF
mkdir -p $RPM_BUILD_ROOT/%{_datadir}/applications
desktop-file-install --vendor Amra \
	--dir $RPM_BUILD_ROOT/%{_datadir}/applications  \
	%{name}.desktop

%post
gtk-update-icon-cache -q -f %{_datadir}/icons/hicolor || :

%clean
[ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT

%files
%defattr(-, root, root, -)
%doc ChangeLog COPYING README TODO
%{_bindir}/pinot
%{_bindir}/pinot_search
%{_datadir}/pinot/index.html
%{_datadir}/pinot/xapian-powered.png
%{_datadir}/pinot/metase-gtk2.glade
%{_datadir}/pinot/metase-gtk2.gladep
%{_datadir}/pinot/textcat_conf.txt
%{_datadir}/pinot/*.src
%dir %{_datadir}/pinot/engines/
%config(noreplace) %{_datadir}/pinot/engines/A9.src
%config(noreplace) %{_datadir}/pinot/engines/Acoona.src
%config(noreplace) %{_datadir}/pinot/engines/Altavista.src
%config(noreplace) %{_datadir}/pinot/engines/AskJeeves.src
%config(noreplace) %{_datadir}/pinot/engines/BitTorrent.src
%config(noreplace) %{_datadir}/pinot/engines/Clusty.src
%config(noreplace) %{_datadir}/pinot/engines/Freshmeat.src
%config(noreplace) %{_datadir}/pinot/engines/Google.src
%config(noreplace) %{_datadir}/pinot/engines/Lycos.src
%config(noreplace) %{_datadir}/pinot/engines/MSN.src
%config(noreplace) %{_datadir}/pinot/engines/Teoma.src
%config(noreplace) %{_datadir}/pinot/engines/Topix.src
%config(noreplace) %{_datadir}/pinot/engines/WiseNut.src
%config(noreplace) %{_datadir}/pinot/engines/Yahoo.src
%config(noreplace) %{_datadir}/pinot/engines/YahooAPI.src
%config(noreplace) %{_datadir}/pinot/engines/Wikipedia.src
%config(noreplace) %{_datadir}/pinot/engines/KodersDescription.xml
%config(noreplace) %{_datadir}/pinot/engines/MozDexDescription.xml
%{_datadir}/locale/fr/LC_MESSAGES/pinot.mo
%{_datadir}/locale/es/LC_MESSAGES/pinot.mo
%{_datadir}/icons/hicolor/48x48/apps/pinot.png
%{_datadir}/applications/Amra-%{name}.desktop

%files text-docs 
%defattr(-, root, root, -)
%{_datadir}/pinot/tokenizers/libpdftokenizer.so
%{_datadir}/pinot/tokenizers/librtftokenizer.so
%{_datadir}/pinot/tokenizers/libwordtokenizer.so

%files omega
%defattr(-, root, root, -)
%config(noreplace) %{_datadir}/pinot/engines/OmegaDescription.xml

%changelog
