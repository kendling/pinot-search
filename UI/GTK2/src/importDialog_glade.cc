// generated 2006/1/13 22:05:22 SGT by fabrice@amra.dyndns.org.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/fabrice/Projects/MetaSE/pinot/UI/GTK2/metase-gtk2.glade
// for gtk 2.6.10 and gtkmm 2.6.2
//
// Please modify the corresponding derived classes in ./src/importDialog.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "importDialog_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/button.h>
#include <gtkmm/buttonbox.h>
#include <gtkmm/label.h>
#include <gtkmm/box.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/image.h>
#include <gtkmm/alignment.h>

importDialog_glade::importDialog_glade(
)
{  
   
   Gtk::Dialog *importDialog = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Button *closeButton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-close")));
   titleEntry = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *locationLabel = Gtk::manage(new class Gtk::Label(_("Location:")));
   titleLabel = Gtk::manage(new class Gtk::Label(_("Title:")));
   typeCombobox = Gtk::manage(new class Gtk::ComboBox());
   
   Gtk::Label *typeLabel = Gtk::manage(new class Gtk::Label(_("Type:")));
   locationEntry = Gtk::manage(new class Gtk::Entry());
   locationButton = Gtk::manage(new class Gtk::Button(_("...")));
   
   Gtk::HBox *locationHbox = Gtk::manage(new class Gtk::HBox(false, 4));
   Gtk::Adjustment *depthSpinbutton_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 5, 5));
   depthSpinbutton = Gtk::manage(new class Gtk::SpinButton(*depthSpinbutton_adj, 1, 0));
   
   Gtk::Label *depthLabel = Gtk::manage(new class Gtk::Label(_("Depth:")));
   Gtk::Label *linksLabel = Gtk::manage(new class Gtk::Label(_("Symlinks:")));
   linksCheckbutton = Gtk::manage(new class Gtk::CheckButton(_("Follow symlinks")));
   docTable = Gtk::manage(new class Gtk::Table(2, 2, false));
   mimeTreeview = Gtk::manage(new class Gtk::TreeView());
   
   Gtk::ScrolledWindow *mimeScrolledwindow = Gtk::manage(new class Gtk::ScrolledWindow());
   importProgressbar = Gtk::manage(new class Gtk::ProgressBar());
   
   Gtk::Image *image575 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-open"), Gtk::IconSize(4)));
   Gtk::Label *label55 = Gtk::manage(new class Gtk::Label(_("Import")));
   Gtk::HBox *hbox52 = Gtk::manage(new class Gtk::HBox(false, 2));
   Gtk::Alignment *alignment34 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   importButton = Gtk::manage(new class Gtk::Button());
   
   Gtk::HBox *importHbox = Gtk::manage(new class Gtk::HBox(false, 4));
   Gtk::VBox *importVbox = Gtk::manage(new class Gtk::VBox(false, 0));
   closeButton->set_flags(Gtk::CAN_FOCUS);
   closeButton->set_flags(Gtk::CAN_DEFAULT);
   closeButton->set_relief(Gtk::RELIEF_NORMAL);
   importDialog->get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
   titleEntry->set_flags(Gtk::CAN_FOCUS);
   titleEntry->set_visibility(true);
   titleEntry->set_editable(true);
   titleEntry->set_max_length(0);
   titleEntry->set_has_frame(true);
   titleEntry->set_activates_default(false);
   locationLabel->set_alignment(0,0.5);
   locationLabel->set_padding(4,4);
   locationLabel->set_justify(Gtk::JUSTIFY_LEFT);
   locationLabel->set_line_wrap(false);
   locationLabel->set_use_markup(false);
   locationLabel->set_selectable(false);
   titleLabel->set_alignment(0,0.5);
   titleLabel->set_padding(4,4);
   titleLabel->set_justify(Gtk::JUSTIFY_LEFT);
   titleLabel->set_line_wrap(false);
   titleLabel->set_use_markup(false);
   titleLabel->set_selectable(false);
   typeLabel->set_alignment(0,0.5);
   typeLabel->set_padding(4,4);
   typeLabel->set_justify(Gtk::JUSTIFY_LEFT);
   typeLabel->set_line_wrap(false);
   typeLabel->set_use_markup(false);
   typeLabel->set_selectable(false);
   locationEntry->set_flags(Gtk::CAN_FOCUS);
   locationEntry->set_visibility(true);
   locationEntry->set_editable(true);
   locationEntry->set_max_length(0);
   locationEntry->set_has_frame(true);
   locationEntry->set_activates_default(false);
   locationButton->set_flags(Gtk::CAN_FOCUS);
   locationButton->set_flags(Gtk::CAN_DEFAULT);
   locationButton->set_relief(Gtk::RELIEF_NORMAL);
   locationHbox->pack_start(*locationEntry);
   locationHbox->pack_start(*locationButton, Gtk::PACK_SHRINK, 0);
   depthSpinbutton->set_flags(Gtk::CAN_FOCUS);
   depthSpinbutton->set_update_policy(Gtk::UPDATE_ALWAYS);
   depthSpinbutton->set_numeric(false);
   depthSpinbutton->set_digits(0);
   depthSpinbutton->set_wrap(false);
   depthLabel->set_alignment(0,0.5);
   depthLabel->set_padding(4,4);
   depthLabel->set_justify(Gtk::JUSTIFY_LEFT);
   depthLabel->set_line_wrap(false);
   depthLabel->set_use_markup(false);
   depthLabel->set_selectable(false);
   linksLabel->set_alignment(0,0.5);
   linksLabel->set_padding(4,4);
   linksLabel->set_justify(Gtk::JUSTIFY_LEFT);
   linksLabel->set_line_wrap(false);
   linksLabel->set_use_markup(false);
   linksLabel->set_selectable(false);
   linksCheckbutton->set_flags(Gtk::CAN_FOCUS);
   linksCheckbutton->set_relief(Gtk::RELIEF_NORMAL);
   linksCheckbutton->set_mode(true);
   linksCheckbutton->set_active(false);
   docTable->set_row_spacings(0);
   docTable->set_col_spacings(0);
   docTable->attach(*titleEntry, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   docTable->attach(*locationLabel, 0, 1, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   docTable->attach(*titleLabel, 0, 1, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   docTable->attach(*typeCombobox, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   docTable->attach(*typeLabel, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   docTable->attach(*locationHbox, 1, 2, 2, 3, Gtk::FILL, Gtk::FILL, 4, 4);
   docTable->attach(*depthSpinbutton, 1, 2, 3, 4, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   docTable->attach(*depthLabel, 0, 1, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
   docTable->attach(*linksLabel, 0, 1, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
   docTable->attach(*linksCheckbutton, 1, 2, 4, 5, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   mimeTreeview->set_flags(Gtk::CAN_FOCUS);
   mimeTreeview->set_headers_visible(true);
   mimeTreeview->set_rules_hint(false);
   mimeTreeview->set_reorderable(false);
   mimeTreeview->set_enable_search(true);
   mimeScrolledwindow->set_flags(Gtk::CAN_FOCUS);
   mimeScrolledwindow->set_shadow_type(Gtk::SHADOW_IN);
   mimeScrolledwindow->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   mimeScrolledwindow->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   mimeScrolledwindow->add(*mimeTreeview);
   image575->set_alignment(0.5,0.5);
   image575->set_padding(0,0);
   label55->set_alignment(0.5,0.5);
   label55->set_padding(0,0);
   label55->set_justify(Gtk::JUSTIFY_LEFT);
   label55->set_line_wrap(false);
   label55->set_use_markup(false);
   label55->set_selectable(false);
   hbox52->pack_start(*image575, Gtk::PACK_SHRINK, 0);
   hbox52->pack_start(*label55, Gtk::PACK_SHRINK, 0);
   alignment34->add(*hbox52);
   importButton->set_flags(Gtk::CAN_FOCUS);
   importButton->set_flags(Gtk::CAN_DEFAULT);
   importButton->set_relief(Gtk::RELIEF_NORMAL);
   importButton->add(*alignment34);
   importHbox->pack_start(*importProgressbar);
   importHbox->pack_start(*importButton, Gtk::PACK_SHRINK, 0);
   importVbox->pack_start(*docTable, Gtk::PACK_SHRINK, 0);
   importVbox->pack_start(*mimeScrolledwindow, Gtk::PACK_EXPAND_WIDGET, 4);
   importVbox->pack_start(*importHbox, Gtk::PACK_SHRINK, 0);
   importDialog->get_vbox()->set_homogeneous(false);
   importDialog->get_vbox()->set_spacing(0);
   importDialog->get_vbox()->pack_start(*importVbox);
   importDialog->set_title(_("Import document"));
   importDialog->set_modal(false);
   importDialog->property_window_position().set_value(Gtk::WIN_POS_NONE);
   importDialog->set_resizable(true);
   importDialog->property_destroy_with_parent().set_value(false);
   importDialog->set_has_separator(true);
   importDialog->add_action_widget(*closeButton, -5);
   closeButton->show();
   titleEntry->show();
   locationLabel->show();
   titleLabel->show();
   typeCombobox->show();
   typeLabel->show();
   locationEntry->show();
   locationButton->show();
   locationHbox->show();
   depthSpinbutton->show();
   depthLabel->show();
   linksLabel->show();
   linksCheckbutton->show();
   docTable->show();
   mimeTreeview->show();
   mimeScrolledwindow->show();
   importProgressbar->show();
   image575->show();
   label55->show();
   hbox52->show();
   alignment34->show();
   importButton->show();
   importHbox->show();
   importVbox->show();
   typeCombobox->signal_changed().connect(SigC::slot(*this, &importDialog_glade::on_typeCombobox_changed), false);
   locationEntry->signal_changed().connect(SigC::slot(*this, &importDialog_glade::on_locationEntry_changed), false);
   locationButton->signal_clicked().connect(SigC::slot(*this, &importDialog_glade::on_locationButton_clicked), false);
   importButton->signal_clicked().connect(SigC::slot(*this, &importDialog_glade::on_importButton_clicked), false);
   importDialog->signal_response().connect(SigC::slot(*this, &importDialog_glade::on_importDialog_response), false);
}

importDialog_glade::~importDialog_glade()
{  delete gmm_data;
}
