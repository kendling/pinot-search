// generated 2006/1/9 22:33:43 SGT by fabrice@amra.dyndns.org.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/fabrice/Projects/MetaSE/pinot/UI/GTK2/metase-gtk2.glade
// for gtk 2.6.10 and gtkmm 2.6.2
//
// Please modify the corresponding derived classes in ./src/queryDialog.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "queryDialog_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/buttonbox.h>
#include <gtkmm/label.h>
#include <gtkmm/table.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/box.h>

queryDialog_glade::queryDialog_glade(
)
{  queryDialog = this;
   gmm_data = new GlademmData(get_accel_group());
   queryCancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
   queryOkbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
   
   Gtk::Label *nameLabel = Gtk::manage(new class Gtk::Label(_("Name:")));
   nameEntry = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Table *table1 = Gtk::manage(new class Gtk::Table(2, 2, false));
   anyEntry = Gtk::manage(new class Gtk::Entry());
   hostNameEntry = Gtk::manage(new class Gtk::Entry());
   fileNameEntry = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Adjustment *resultsCountSpinbutton_adj = Gtk::manage(new class Gtk::Adjustment(10, 10, 100, 10, 20, 20));
   resultsCountSpinbutton = Gtk::manage(new class Gtk::SpinButton(*resultsCountSpinbutton_adj, 1, 0));
   indexCheckbutton = Gtk::manage(new class Gtk::CheckButton(_("Index all results with label")));
   
   Gtk::Label *anyLabel = Gtk::manage(new class Gtk::Label(_("Any of the words:")));
   Gtk::Label *fileNameLabel = Gtk::manage(new class Gtk::Label(_("File name:")));
   Gtk::Label *resultsCountLabel = Gtk::manage(new class Gtk::Label(_("Number of results:")));
   labelNameCombobox = Gtk::manage(new class Gtk::ComboBox());
   
   Gtk::Label *hostLabel = Gtk::manage(new class Gtk::Label(_("Host name:")));
   Gtk::Label *notLabel = Gtk::manage(new class Gtk::Label(_("None of the words:")));
   notEntry = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Table *tersmTable = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::VBox *termsVbox = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *propertiesLabel = Gtk::manage(new class Gtk::Label(_("Properties")));
   Gtk::Label *filtersLabel = Gtk::manage(new class Gtk::Label(_("Limit to documents that match")));
   phraseEntry = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *phraseLabel = Gtk::manage(new class Gtk::Label(_("the exact phrase:")));
   Gtk::Label *languageLabel = Gtk::manage(new class Gtk::Label(_("the language:")));
   languageCombobox = Gtk::manage(new class Gtk::ComboBox());
   andEntry = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Label *andLabel = Gtk::manage(new class Gtk::Label(_("all the words:")));
   Gtk::Label *labelLabel = Gtk::manage(new class Gtk::Label(_("the label:")));
   labelFilterCombobox = Gtk::manage(new class Gtk::ComboBox());
   
   Gtk::Table *advancedTable = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::VBox *advancedVbox = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *advancedLabel = Gtk::manage(new class Gtk::Label(_("Advanced")));
   queryNotebook = Gtk::manage(new class Gtk::Notebook());
   
   Gtk::VBox *queryVbox = Gtk::manage(new class Gtk::VBox(false, 0));
   queryCancelbutton->set_flags(Gtk::CAN_FOCUS);
   queryCancelbutton->set_flags(Gtk::CAN_DEFAULT);
   queryCancelbutton->set_relief(Gtk::RELIEF_NORMAL);
   queryOkbutton->set_flags(Gtk::CAN_FOCUS);
   queryOkbutton->set_flags(Gtk::CAN_DEFAULT);
   queryOkbutton->set_relief(Gtk::RELIEF_NORMAL);
   queryDialog->get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
   nameLabel->set_alignment(0.5,0.5);
   nameLabel->set_padding(4,4);
   nameLabel->set_justify(Gtk::JUSTIFY_LEFT);
   nameLabel->set_line_wrap(false);
   nameLabel->set_use_markup(false);
   nameLabel->set_selectable(false);
   nameEntry->set_flags(Gtk::CAN_FOCUS);
   nameEntry->set_visibility(true);
   nameEntry->set_editable(true);
   nameEntry->set_max_length(0);
   nameEntry->set_has_frame(true);
   nameEntry->set_activates_default(false);
   table1->set_row_spacings(0);
   table1->set_col_spacings(0);
   table1->attach(*nameLabel, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*nameEntry, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 4, 4);
   anyEntry->set_flags(Gtk::CAN_FOCUS);
   anyEntry->set_visibility(true);
   anyEntry->set_editable(true);
   anyEntry->set_max_length(0);
   anyEntry->set_has_frame(true);
   anyEntry->set_activates_default(false);
   hostNameEntry->set_flags(Gtk::CAN_FOCUS);
   hostNameEntry->set_visibility(true);
   hostNameEntry->set_editable(true);
   hostNameEntry->set_max_length(0);
   hostNameEntry->set_has_frame(true);
   hostNameEntry->set_activates_default(false);
   fileNameEntry->set_flags(Gtk::CAN_FOCUS);
   fileNameEntry->set_visibility(true);
   fileNameEntry->set_editable(true);
   fileNameEntry->set_max_length(0);
   fileNameEntry->set_has_frame(true);
   fileNameEntry->set_activates_default(false);
   resultsCountSpinbutton->set_flags(Gtk::CAN_FOCUS);
   resultsCountSpinbutton->set_update_policy(Gtk::UPDATE_ALWAYS);
   resultsCountSpinbutton->set_numeric(false);
   resultsCountSpinbutton->set_digits(0);
   resultsCountSpinbutton->set_wrap(false);
   indexCheckbutton->set_flags(Gtk::CAN_FOCUS);
   indexCheckbutton->set_relief(Gtk::RELIEF_NORMAL);
   indexCheckbutton->set_mode(true);
   indexCheckbutton->set_active(false);
   anyLabel->set_alignment(0,0.5);
   anyLabel->set_padding(4,4);
   anyLabel->set_justify(Gtk::JUSTIFY_LEFT);
   anyLabel->set_line_wrap(false);
   anyLabel->set_use_markup(false);
   anyLabel->set_selectable(false);
   fileNameLabel->set_alignment(0,0.5);
   fileNameLabel->set_padding(4,4);
   fileNameLabel->set_justify(Gtk::JUSTIFY_LEFT);
   fileNameLabel->set_line_wrap(false);
   fileNameLabel->set_use_markup(false);
   fileNameLabel->set_selectable(false);
   resultsCountLabel->set_alignment(0,0.5);
   resultsCountLabel->set_padding(4,4);
   resultsCountLabel->set_justify(Gtk::JUSTIFY_LEFT);
   resultsCountLabel->set_line_wrap(false);
   resultsCountLabel->set_use_markup(false);
   resultsCountLabel->set_selectable(false);
   hostLabel->set_alignment(0,0.5);
   hostLabel->set_padding(4,4);
   hostLabel->set_justify(Gtk::JUSTIFY_LEFT);
   hostLabel->set_line_wrap(false);
   hostLabel->set_use_markup(false);
   hostLabel->set_selectable(false);
   notLabel->set_alignment(0,0.5);
   notLabel->set_padding(4,4);
   notLabel->set_justify(Gtk::JUSTIFY_LEFT);
   notLabel->set_line_wrap(false);
   notLabel->set_use_markup(false);
   notLabel->set_selectable(false);
   notEntry->set_flags(Gtk::CAN_FOCUS);
   notEntry->set_visibility(true);
   notEntry->set_editable(true);
   notEntry->set_max_length(0);
   notEntry->set_has_frame(true);
   notEntry->set_activates_default(false);
   tersmTable->set_row_spacings(0);
   tersmTable->set_col_spacings(0);
   tersmTable->attach(*anyEntry, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   tersmTable->attach(*hostNameEntry, 1, 2, 2, 3, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   tersmTable->attach(*fileNameEntry, 1, 2, 3, 4, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   tersmTable->attach(*resultsCountSpinbutton, 1, 2, 4, 5, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   tersmTable->attach(*indexCheckbutton, 0, 1, 5, 6, Gtk::FILL, Gtk::FILL, 4, 4);
   tersmTable->attach(*anyLabel, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   tersmTable->attach(*fileNameLabel, 0, 1, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
   tersmTable->attach(*resultsCountLabel, 0, 1, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
   tersmTable->attach(*labelNameCombobox, 1, 2, 5, 6, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   tersmTable->attach(*hostLabel, 0, 1, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   tersmTable->attach(*notLabel, 0, 1, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   tersmTable->attach(*notEntry, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   termsVbox->pack_start(*tersmTable, Gtk::PACK_SHRINK, 4);
   propertiesLabel->set_alignment(0.5,0.5);
   propertiesLabel->set_padding(0,0);
   propertiesLabel->set_justify(Gtk::JUSTIFY_LEFT);
   propertiesLabel->set_line_wrap(false);
   propertiesLabel->set_use_markup(false);
   propertiesLabel->set_selectable(false);
   filtersLabel->set_alignment(0,0.5);
   filtersLabel->set_padding(4,4);
   filtersLabel->set_justify(Gtk::JUSTIFY_LEFT);
   filtersLabel->set_line_wrap(false);
   filtersLabel->set_use_markup(false);
   filtersLabel->set_selectable(false);
   phraseEntry->set_flags(Gtk::CAN_FOCUS);
   phraseEntry->set_visibility(true);
   phraseEntry->set_editable(true);
   phraseEntry->set_max_length(0);
   phraseEntry->set_has_frame(true);
   phraseEntry->set_activates_default(false);
   phraseLabel->set_alignment(0,0.5);
   phraseLabel->set_padding(4,4);
   phraseLabel->set_justify(Gtk::JUSTIFY_LEFT);
   phraseLabel->set_line_wrap(false);
   phraseLabel->set_use_markup(false);
   phraseLabel->set_selectable(false);
   languageLabel->set_alignment(0,0.5);
   languageLabel->set_padding(4,4);
   languageLabel->set_justify(Gtk::JUSTIFY_LEFT);
   languageLabel->set_line_wrap(false);
   languageLabel->set_use_markup(false);
   languageLabel->set_selectable(false);
   andEntry->set_flags(Gtk::CAN_FOCUS);
   andEntry->set_visibility(true);
   andEntry->set_editable(true);
   andEntry->set_max_length(0);
   andEntry->set_has_frame(true);
   andEntry->set_activates_default(false);
   andLabel->set_alignment(0,0.5);
   andLabel->set_padding(4,4);
   andLabel->set_justify(Gtk::JUSTIFY_LEFT);
   andLabel->set_line_wrap(false);
   andLabel->set_use_markup(false);
   andLabel->set_selectable(false);
   labelLabel->set_alignment(0,0.5);
   labelLabel->set_padding(4,4);
   labelLabel->set_justify(Gtk::JUSTIFY_LEFT);
   labelLabel->set_line_wrap(false);
   labelLabel->set_use_markup(false);
   labelLabel->set_selectable(false);
   advancedTable->set_row_spacings(0);
   advancedTable->set_col_spacings(0);
   advancedTable->attach(*phraseEntry, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   advancedTable->attach(*phraseLabel, 0, 1, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   advancedTable->attach(*languageLabel, 0, 1, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
   advancedTable->attach(*languageCombobox, 1, 2, 2, 3, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   advancedTable->attach(*andEntry, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   advancedTable->attach(*andLabel, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   advancedTable->attach(*labelLabel, 0, 1, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
   advancedTable->attach(*labelFilterCombobox, 1, 2, 3, 4, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 4, 4);
   advancedVbox->pack_start(*filtersLabel, Gtk::PACK_SHRINK, 4);
   advancedVbox->pack_start(*advancedTable, Gtk::PACK_SHRINK, 0);
   advancedLabel->set_alignment(0.5,0.5);
   advancedLabel->set_padding(0,0);
   advancedLabel->set_justify(Gtk::JUSTIFY_LEFT);
   advancedLabel->set_line_wrap(false);
   advancedLabel->set_use_markup(false);
   advancedLabel->set_selectable(false);
   queryNotebook->set_flags(Gtk::CAN_FOCUS);
   queryNotebook->set_show_tabs(true);
   queryNotebook->set_show_border(true);
   queryNotebook->set_tab_pos(Gtk::POS_TOP);
   queryNotebook->set_scrollable(false);
   queryNotebook->append_page(*termsVbox, *propertiesLabel);
   queryNotebook->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   queryNotebook->append_page(*advancedVbox, *advancedLabel);
   queryNotebook->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   queryVbox->pack_start(*table1, Gtk::PACK_SHRINK, 0);
   queryVbox->pack_start(*queryNotebook);
   queryDialog->get_vbox()->set_homogeneous(false);
   queryDialog->get_vbox()->set_spacing(0);
   queryDialog->get_vbox()->pack_start(*queryVbox);
   queryDialog->set_title(_("Query properties"));
   queryDialog->set_modal(false);
   queryDialog->property_window_position().set_value(Gtk::WIN_POS_NONE);
   queryDialog->set_resizable(true);
   queryDialog->property_destroy_with_parent().set_value(false);
   queryDialog->set_has_separator(true);
   queryDialog->add_action_widget(*queryCancelbutton, -6);
   queryDialog->add_action_widget(*queryOkbutton, -5);
   queryCancelbutton->show();
   queryOkbutton->show();
   nameLabel->show();
   nameEntry->show();
   table1->show();
   anyEntry->show();
   hostNameEntry->show();
   fileNameEntry->show();
   resultsCountSpinbutton->show();
   indexCheckbutton->show();
   anyLabel->show();
   fileNameLabel->show();
   resultsCountLabel->show();
   labelNameCombobox->show();
   hostLabel->show();
   notLabel->show();
   notEntry->show();
   tersmTable->show();
   termsVbox->show();
   propertiesLabel->show();
   filtersLabel->show();
   phraseEntry->show();
   phraseLabel->show();
   languageLabel->show();
   languageCombobox->show();
   andEntry->show();
   andLabel->show();
   labelLabel->show();
   labelFilterCombobox->show();
   advancedTable->show();
   advancedVbox->show();
   advancedLabel->show();
   queryNotebook->show();
   queryVbox->show();
   queryDialog->show();
   queryOkbutton->signal_clicked().connect(SigC::slot(*this, &queryDialog_glade::on_queryOkbutton_clicked), false);
   nameEntry->signal_changed().connect(SigC::slot(*this, &queryDialog_glade::on_nameEntry_changed), false);
}

queryDialog_glade::~queryDialog_glade()
{  delete gmm_data;
}
